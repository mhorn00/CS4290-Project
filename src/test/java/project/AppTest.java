/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package project;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    
    @Test
    public void testSimpleExpression() {
        double result = MathHelper.parse("2 + 2");
        assertEquals(4.0, result);
    }
    
    @Test
    public void testNestedExpression() {
        double result = MathHelper.parse("(2 + 2) * 3");
        assertEquals(12.0, result);
    }
    
    @Test
    public void testFunction() {
        double result = MathHelper.parse("sqrt(16)");
        assertEquals(4.0, result);
    }
    
    @Test
    public void testNegativeNumber() {
        double result = MathHelper.parse("-2 + 4");
        assertEquals(2.0, result);
    }
    
    @Test
    public void testInvalidExpression() {
        assertThrows(IllegalArgumentException.class, () -> {
            MathHelper.parse("2 +");
        });
    }
    
    @Test
    public void testInvalidFunction() {
        assertThrows(IllegalArgumentException.class, () -> {
            MathHelper.parse("foo(2)");
        });
    }
    
    @Test
    public void testEmptyParenthesis() {
        assertThrows(IllegalArgumentException.class, () -> {
            MathHelper.parse("()");
        });
    }
    
    @Test
    public void testUnmatchedClosingParenthesis() {
        assertThrows(IllegalArgumentException.class, () -> {
            MathHelper.parse("(2 + 2))");
        });
    }
    
    @Test
    public void testUnmatchedOpeningParenthesis() {
        assertThrows(IllegalArgumentException.class, () -> {
            MathHelper.parse("(2 + 2");
        });
    }
}
